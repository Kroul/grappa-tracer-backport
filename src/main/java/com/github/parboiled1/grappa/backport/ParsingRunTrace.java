/*
 * Copyright (C) 2015 Francis Galiegue <fgaliegue@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.github.parboiled1.grappa.backport;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.ImmutableList;

import javax.annotation.Nonnull;
import java.util.List;

/**
 * Class generated by a {@link TracingParseRunnerListener}
 *
 * <p>You should normally not use this class directly.</p>
 */
public final class ParsingRunTrace
{
    private final long startDate;
    private final List<TraceEvent> events;

    @SuppressWarnings("TypeMayBeWeakened")
    @JsonCreator
    public ParsingRunTrace(@JsonProperty("startDate") final long startDate,
        @JsonProperty("events") final List<TraceEvent> events)
    {
        this.startDate = startDate;
        this.events = ImmutableList.copyOf(events);
    }

    /**
     * Get the time at which this parse event has started
     *
     * <p>The time is given as the number of milliseconds since epoch (that is,
     * Jan 1st 1970 at 00:00:00 GMT).</p>
     *
     * @return the timestamp
     *
     * @see System#currentTimeMillis()
     */
    public long getStartDate()
    {
        return startDate;
    }

    /**
     * Get the full list of parsing events collected
     *
     * @return the list (immutable)
     *
     * @see ImmutableList
     */
    @Nonnull
    public List<TraceEvent> getEvents()
    {
        return events;
    }
}
